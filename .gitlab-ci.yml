stages:
- build
- test
- publish

#--------------------------
# Build templates
#--------------------------

.build-fedora-template: &build-fedora-template_definition
  stage: build
  script:
    - ci/fedora/packages.sh
    - ci/common-rpm-build.sh
    - mkdir ${CI_JOB_NAME}
    - cp -r /root/rpmbuild/RPMS build/SRPMS ${CI_JOB_NAME}
    - tree ${CI_JOB_NAME}
  artifacts:
    paths:
      - "$CI_JOB_NAME"

#--------------------------
# Build jobs
#--------------------------

cmake-from-tarball:
  stage: build
  image: gitlab-registry.cern.ch/linuxsupport/cc7-base
  script:
    - ci/fedora/packages.sh
    - git submodule update --init --recursive
    - packaging/make-srpm.sh
    - yum-builddep -y build/SRPMS/*
    - packaging/make-dist.sh
    - cd build/
    - tar xf davix-*.tar.gz
    - cd davix-*/
    - mkdir build/ && cd build/
    - cmake3 ../

source-tarball:
  stage: build
  image: gitlab-registry.cern.ch/linuxsupport/cc7-base
  script:
    - yum install -y git python3
    - packaging/make-dist.sh
    - mv -v build/davix-*.tar.gz .
  artifacts:
    paths:
      - davix-*.tar.gz
  rules:
    - if: '$CI_COMMIT_TAG != null'
    - if: '$CI_COMMIT_TAG == null'
      when: manual
      allow_failure: true

binary-tarball:
  stage: build
  image: gitlab-registry.cern.ch/linuxsupport/cc7-base
  script:
    - ci/fedora/packages.sh
    - packaging/make-binary-dist.sh
    - tree binary-tarball/ --filelimit 10
  artifacts:
    paths:
      - davix-*.tar.gz
  rules:
    - if: '$CI_COMMIT_TAG != null'
    - if: '$CI_COMMIT_TAG == null'
      when: manual
      allow_failure: true

cc7:
  image: gitlab-registry.cern.ch/linuxsupport/cc7-base
  <<: *build-fedora-template_definition

alma8:
  image: gitlab-registry.cern.ch/linuxsupport/alma8-base
  <<: *build-fedora-template_definition

alma9:
  image: gitlab-registry.cern.ch/linuxsupport/alma9-base
  <<: *build-fedora-template_definition

fedora-36:
  image: fedora:36
  <<: *build-fedora-template_definition

fedora-37:
  image: fedora:37
  <<: *build-fedora-template_definition

fedora-rawhide:
  image: fedora:rawhide
  <<: *build-fedora-template_definition
  allow_failure: true

ubuntu-focal:
  stage: build
  image: ubuntu:focal
  script:
    - ci/debian/packages.sh
    - apt install -y python2
    - packaging/make-deb.sh
    - mkdir ${CI_JOB_NAME}
    - cp -r build/debian-build-arena/*.{deb,ddeb,dsc} ${CI_JOB_NAME}
  variables:
    DEBIAN_FRONTEND: "noninteractive"
  artifacts:
    paths:
    - "$CI_JOB_NAME"

debian-stretch:
  stage: build
  image: debian:stretch
  script:
    - ci/debian/packages.sh
    - ci/debian/stretch-cmake-upgrade.sh
    - packaging/make-deb.sh
    - mkdir ${CI_JOB_NAME}
    - cp -r build/debian-build-arena/*.{deb,dsc} ${CI_JOB_NAME}
  artifacts:
    paths:
    - "$CI_JOB_NAME"

docs-generate:
  stage: build
  image: fedora:34
  script:
    - dnf install -y git python3-sphinx python3-pip gcc-c++ rpm-build dnf-plugins-core python2 python3-breathe make
    - packaging/make-docs.sh
    - mv build/doc/build/html docs
  artifacts:
    paths:
    - docs

#--------------------------
# Test jobs
#--------------------------

cc7-test:
  stage: test
  image: gitlab-registry.cern.ch/linuxsupport/cc7-base
  needs:
    - job: cc7
  script:
    - yum install -y cc7/RPMS/*.rpm
    - davix-unit-tests

alma8-test:
  stage: test
  image: gitlab-registry.cern.ch/linuxsupport/alma8-base
  needs:
    - job: alma8
  script:
    - dnf install -y epel-release
    - dnf install -y alma8/RPMS/*.rpm
    - davix-unit-tests

alma9-test:
  stage: test
  image: gitlab-registry.cern.ch/linuxsupport/alma9-base
  needs:
    - job: alma9
  script:
    - dnf install -y epel-release
    - dnf install -y alma9/RPMS/*.rpm
    - davix-unit-tests

fedora-36-test:
  stage: test
  image: fedora:36
  needs:
    - job: fedora-36
  script:
    - dnf install -y fedora-36/RPMS/*.rpm
    - davix-unit-tests

fedora-37-test:
  stage: test
  image: fedora:37
  needs:
    - job: fedora-37
  script:
    - dnf install -y fedora-37/RPMS/*.rpm
    - davix-unit-tests

#--------------------------
# Publish jobs
#--------------------------

docs:
  stage: publish
  image: gitlab-registry.cern.ch/eos/gitlab-eos/cc7:latest
  dependencies:
    - docs-generate
  script:
    - yum install -y sssd-client sudo
    - automount
    - cat "$DAVIXCI_PW" | kinit davixci
    - eosfusebind
    - SNAPSHOT=$(date +%s)
    - TARGET="/eos/project/d/davix/www/docs/${CI_COMMIT_REF_NAME}"
    - STAGING_AREA="$TARGET-${SNAPSHOT}"
    - cp -r docs "$STAGING_AREA"
    - ci/replace-directory.sh "$STAGING_AREA" "$TARGET"
    - sleep 60
  tags:
    - docker-privileged
  retry: 2
  only:
    - branches@dmc/davix
    - tags@dmc/davix

rpms:
  stage: publish
  image: gitlab-registry.cern.ch/eos/gitlab-eos/cc7:latest
  dependencies:
    - cc7
    - alma8
    - alma9
  script:
    - yum install -y python sssd-client sudo createrepo
    - automount
    - cat "$STCI_PASSWORD" | kinit stci
    - eosfusebind
    - for platform in cc7 alma8 alma9; do packaging/repo-manager.py --action add --base /eos/project/s/storage-ci/www/davix --ref ${CI_COMMIT_REF_NAME} --packages ${platform}/RPMS/* ${platform}/SRPMS/* ; done
    - sleep 60
  tags:
    - docker-privileged
  retry: 2
  only:
    - branches@dmc/davix
    - tags@dmc/davix

rpms-dmc:
  stage: publish
  image: gitlab-registry.cern.ch/eos/gitlab-eos/cc7:latest
  dependencies:
    - cc7
    - alma8
    - alma9
    - fedora-36
    - fedora-37
    - fedora-rawhide
  script:
    - yum install -y python sssd-client sudo createrepo
    - automount
    - cat "$STCI_PASSWORD" | kinit stci
    - eosfusebind
    - declare -A DISTMAP=( [cc7]=el7 [alma8]=el8 [alma9]=el9 [fedora-36]=fc36 [fedora-37]=fc37 [fedora-rawhide]=fc-rawhide )
    - if [[ -z $CI_COMMIT_TAG ]]; then BUILD="testing" ; else BUILD="rc" ; fi
    - |
        for platform in cc7 alma8 alma9 fedora-36 fedora-37 fedora-rawhide ; do
          dist=${DISTMAP[${platform}]};
          cp -nv ${platform}/RPMS/* ${platform}/SRPMS/* /eos/project-d/dmc/www/repos/${BUILD}/${dist}/x86_64 || true;
          packaging/update-repo.sh /eos/project-d/dmc/www/repos/${BUILD}/${dist}/x86_64;
        done
    - sleep 30
  tags:
    - docker-privileged
  retry: 2
  only:
    - master@dmc/davix
    - devel@dmc/davix
    - tags@dmc/davix
